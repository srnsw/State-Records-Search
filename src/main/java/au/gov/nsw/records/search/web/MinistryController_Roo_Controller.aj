// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nsw.records.search.web;

import au.gov.nsw.records.search.model.Ministry;
import au.gov.nsw.records.search.web.MinistryController;
import java.io.UnsupportedEncodingException;
import javax.servlet.http.HttpServletRequest;
import org.joda.time.format.DateTimeFormat;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect MinistryController_Roo_Controller {
    
    @RequestMapping(params = "form", produces = "text/html")
    public String MinistryController.createForm(Model uiModel) {
        populateEditForm(uiModel, new Ministry());
        return "ministries/create";
    }
    
    @RequestMapping(value = "/{ministryNumber}", produces = "text/html")
    public String MinistryController.show(@PathVariable("ministryNumber") int ministryNumber, Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("ministry", Ministry.findMinistry(ministryNumber));
        uiModel.addAttribute("itemId", ministryNumber);
        return "ministries/show";
    }
    
    @RequestMapping(produces = "text/html")
    public String MinistryController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("ministrys", Ministry.findMinistryEntries(firstResult, sizeNo));
            float nrOfPages = (float) Ministry.countMinistrys() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("ministrys", Ministry.findAllMinistrys());
        }
        addDateTimeFormatPatterns(uiModel);
        return "ministries/list";
    }
    
    @RequestMapping(value = "/{ministryNumber}", params = "form", produces = "text/html")
    public String MinistryController.updateForm(@PathVariable("ministryNumber") int ministryNumber, Model uiModel) {
        populateEditForm(uiModel, Ministry.findMinistry(ministryNumber));
        return "ministries/update";
    }
    
    @RequestMapping(value = "/{ministryNumber}", method = RequestMethod.DELETE, produces = "text/html")
    public String MinistryController.delete(@PathVariable("ministryNumber") int ministryNumber, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        Ministry ministry = Ministry.findMinistry(ministryNumber);
        ministry.remove();
        uiModel.asMap().clear();
        uiModel.addAttribute("page", (page == null) ? "1" : page.toString());
        uiModel.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/ministries";
    }
    
    void MinistryController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("ministry_registereddate_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("ministry_startdate_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("ministry_enddate_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
    }
    
    void MinistryController.populateEditForm(Model uiModel, Ministry ministry) {
        uiModel.addAttribute("ministry", ministry);
        addDateTimeFormatPatterns(uiModel);
    }
    
    String MinistryController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
